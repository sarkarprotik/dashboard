{"version":3,"sources":["Components/SideBar.jsx","Redux/actions.js","Components/DarkModeSwitch/DarkModeSwitch.jsx","Components/NewHeader.jsx","Components/InfoIcon.jsx","Components/MediaCard.jsx","Components/CardData.jsx","Components/Home.jsx","Components/Charts/LineChart.jsx","Components/Frontend.jsx","Components/Charts/BarChart.jsx","Components/Backend.jsx","Components/SASIcon.jsx","Components/Commerce.jsx","Components/Main.jsx","Components/Loading/Loading.jsx","Components/Proxy1.jsx","app.js","serviceWorker.js","Redux/reducer.js","index.js"],"names":["useStyles","makeStyles","list","width","fullList","connect","state","DISPLAY","dispatch","setDISPLAY","value","type","props","side","classes","React","useState","top","left","bottom","right","setState","ListData","name","icon","HomeIcon","GrainIcon","GraphicEqIcon","DevicesOtherIcon","toggleDrawer","open","event","key","Button","onClick","style","color","Drawer","onClose","className","role","onKeyDown","List","map","data","index","ListItem","button","ListItemIcon","ListItemText","primary","Divider","DarkModeSwitch","parentMethod","initialState","setInitialState","class","zoom","onChange","theme","root","flexGrow","menuButton","marginRight","spacing","title","NewHeader","console","log","AppBar","position","Toolbar","Typography","variant","FormControlLabel","control","InfoIcon","backgroundColor","gutterBottom","component","anchor","margin","display","justifyContent","card","maxWidth","window","innerHeight","media","height","MediaCard","data1","url","Container","Card","CardActionArea","CardMedia","image","CardContent","CardActions","size","cardData","CardData","Grid","direction","justify","container","item","Home","labels","datasets","label","borderColor","lineTenstion","LineChart","Frontend","BarChart","Backend","Box","SASIcon","useEffect","script","document","createElement","src","async","body","appendChild","removeChild","xlinkHref","href","Commerce","themeObject","palette","main","secondary","drawer","THEME","setTheme","updatedTheme","useDarkMode","toggleDarkMode","whatToShow","setWhatToShow","themeConfig","createMuiTheme","background","paper","ThemeProvider","minHeight","zIndex","Loading","Proxy1","loading","setLoading","setTimeout","history","createBrowserHistory","basename","process","App","path","Boolean","location","hostname","match","reducer","action","store","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b56acd55.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuOpenRoundedIcon from \"@material-ui/icons/MenuOpenRounded\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport GrainIcon from \"@material-ui/icons/Grain\";\nimport GraphicEqIcon from \"@material-ui/icons/GraphicEq\";\nimport DevicesOtherIcon from \"@material-ui/icons/DevicesOther\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../Redux/actions\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  }\n});\n\nconst SideBar = props => {\n  // console.log('this is props', props)\n  const { setDISPLAY } = props;\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n\n  const ListData = [\n    { name: \"Home\", icon: HomeIcon },\n    { name: \"Frontend\", icon: GrainIcon },\n    { name: \"Backend\", icon: GraphicEqIcon },\n    { name: \"Commerce\", icon: DevicesOtherIcon }\n  ];\n\n  const toggleDrawer = (side, open) => event => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [side]: open });\n  };\n\n  const sideList = side => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <List>\n        {ListData.map((data, index) => (\n          <ListItem\n            button\n            key={data.name}\n            onClick={() => {\n              setDISPLAY(data.name);\n              // console.log(data.name,'clicked...............>>>>>', DISPLAY)\n            }}\n          >\n            <ListItemIcon>\n              <data.icon />\n            </ListItemIcon>\n            <ListItemText primary={data.name} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n    </div>\n  );\n\n  return (\n    <div>\n      <Button onClick={toggleDrawer(\"left\", true)}>\n        <MenuOpenRoundedIcon style={{ color: \"white\" }} />\n      </Button>\n      <Drawer open={state.left} onClose={toggleDrawer(\"left\", false)}>\n        {sideList(\"left\")}\n      </Drawer>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    ...state,\n    DISPLAY: state.DISPLAY\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDISPLAY: value =>\n      dispatch({ type: actionTypes.SET_DISPLAY, DISPLAY: value })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBar);\n","export const SET_DISPLAY = 'SET_DISPLAY'","import React, { useState } from \"react\";\nimport \"./DarkModeSwitch.scss\";\n\nconst DarkModeSwitch = ({ parentMethod }) => {\n  const [initialState, setInitialState] = useState(true);\n\n  const handleClick = () => {\n    parentMethod();\n    setInitialState(!initialState);\n  };\n\n  return (\n    <div class=\"wrapper\" style={{ zoom: 0.5 }}>\n      <div class=\"toggle\">\n        <input\n          class=\"toggle-input\"\n          type=\"checkbox\"\n          onChange={() => handleClick()}\n        />\n        <div class=\"toggle-bg\"></div>\n        <div class=\"toggle-switch\">\n          <div class=\"toggle-switch-figure\"></div>\n          <div class=\"toggle-switch-figureAlt\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DarkModeSwitch;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\n\nimport { FormControlLabel } from \"@material-ui/core\";\nimport SideBar from \"./SideBar\";\nimport DarkModeSwitch from \"./DarkModeSwitch/DarkModeSwitch\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\nconst NewHeader = ({ parentMethod }) => {\n  console.log(useStyles)\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            <SideBar />\n          </Typography>\n          <FormControlLabel\n            control={<DarkModeSwitch parentMethod={parentMethod} />}\n          />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\nexport default NewHeader;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\n\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function InfoIcon() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [side]: open });\n}\n\n  const fullList = side => (\n    <div\n      className={classes.fullList}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n        <h3 style={{margin: 20, display: 'flex', justifyContent: 'flex-end',}}>© 2020 Scandinavian Airlines System Denmark-Norway-Sweden, org.nr 902001-7720, 195 87 Stockholm</h3>\n   \n    </div>\n  );\n\n  return (\n    <div>\n        \n      <Button onClick={toggleDrawer('bottom', true)} style={{backgroundColor: ''}}>\n      <Typography gutterBottom variant=\"h6\" component=\"h2\" color='primary'>\n      <InfoOutlinedIcon />\n          </Typography>\n        </Button>\n      <Drawer anchor=\"bottom\" open={state.bottom} onClose={toggleDrawer('bottom', false)}>\n        {fullList('bottom')}\n      </Drawer>\n\n    </div>\n  );\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Container } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: window.innerHeight * 0.3\n  },\n  media: {\n    height: window.innerHeight * 0.3\n  }\n});\n\nconst MediaCard = ({ data1 }) => {\n  const classes = useStyles();\n\n  const { url, title } = data1;\n\n  return (\n    <Container>\n      <Card className={classes.card}>\n        <CardActionArea>\n          <CardMedia className={classes.media} image={url} />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {title}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Lizards are a widespread group of squamate reptiles, with over\n              6,000 species, ranging across all continents except Antarctica\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button size=\"medium\" color=\"secondary\">\n            Like\n          </Button>\n        </CardActions>\n      </Card>\n    </Container>\n  );\n};\n\nexport default MediaCard;\n","import React from 'react'\nimport MediaCard from \"./MediaCard\";\n\nimport {\n\n    Container,\n    Grid,\n\n  } from \"@material-ui/core\";\n\n\n\n\n\nconst cardData = [\n   { title: 'Fancy', url:\"https://media.giphy.com/media/U7gTVK2ch30xsUskCL/giphy.gif\"},\n   { title: 'Fancier', url:\"https://media.giphy.com/media/S0E65fPCUecSI/giphy.gif\"},\n  ]\n\n\nconst CardData = () => {\n    return (\n        <Container>\n          <Grid direction=\"row\" justify=\"center\" container spacing={3}>\n              {cardData.map((data, index) =>{\n               return (\n                <Grid item key={index}>\n                 <MediaCard data1={data}/>\n                </Grid>\n                 )\n              })}\n          </Grid>\n        </Container>\n    )\n}\n\nexport default CardData","import React from 'react'\nimport CardData from './CardData'\n\n\nconst Home = () => {\n    return (\n        <CardData />\n    )\n}\n\nexport default Home","// import React from 'react'\n// //\n// import useChartConfig from 'hooks/useChartConfig'\n// import Box from 'components/Box'\n// import SyntaxHighlighter from 'components/SyntaxHighlighter'\n// import { Chart } from 'react-chartsjs-2'\n// let sourceCode\n// export default function LineChart () {\n//   const { data, randomizeData } = useChartConfig({\n//     series: 10\n//   })\n//   const series = React.useMemo(\n//     () => ({\n//       showPoints: false\n//     }),\n//     []\n//   )\n//   const axes = React.useMemo(\n//     () => [\n//       { primary: true, type: 'time', position: 'bottom' },\n//       { type: 'linear', position: 'left' }\n//     ],\n//     []\n//   )\n//   return (\n//     <>\n//       <button onClick={randomizeData}>Randomize Data</button>\n//       <br />\n//       <br />\n//       <Box>\n//         <Chart data={data} series={series} axes={axes} tooltip />\n//       </Box>\n//       <br />\n//       <SyntaxHighlighter code={sourceCode} />\n//     </>\n//   )\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React from 'react'\nimport Line from 'react-chartjs-2'\n\nconst data = {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n    datasets: [\n      {\n        label: \"New\",\n        // backgroundColor: \"#000099\",\n        borderColor: \"green\",\n        data: [20, 0, 5, 2, 20, 30, 45],\n        lineTenstion: 10,\n    },\n    {\n        label: \"Old\",\n        // backgroundColor: \"blue\",\n        borderColor: \"red\",\n        data: [20, 30, 25, 22, 2, 32, 15],\n        lineTenstion: 3\n    },\n]\n  };\n\n// const options = {\n//     scales: {\n//         yAxes: [{\n//             stacked: true\n//         }]\n//     }\n// }\n\n\nconst LineChart = () => {\n    return (\n        <>\n        <Line type='line' data={data} \n        />\n\n        </>\n    )\n}\n\nexport default LineChart","import React from \"react\";\nimport LineChart from \"./Charts/LineChart\";\n\nconst Frontend = () => {\n  return <LineChart />;\n};\n\nexport default Frontend;\n","import React from \"react\";\nimport Bar from \"react-chartjs-2\";\nimport { makeStyles } from '@material-ui/core'\n\nconst data = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [\n    {\n      label: \"All Deploys\",\n      backgroundColor: \"#000099\",\n      borderColor: \"rgb(255, 99, 132)\",\n      data: [0, 10, 5, 2, 20, 30, 45],\n      lineTenstion: 3\n    }\n  ]\n};\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: 'red',\n    color: props => props.color\n  }\n})\n\n\n\n\n\nconst BarChart = (props) => {\n  const classes = useStyles(props)\n  console.log(classes)\n  return (\n    // <div className={classes.root}>\n      <Bar type=\"bar\" data={data} width={100} height={50} />\n    // </div>\n  );\n};\n\nexport default BarChart;\n","import React from \"react\";\nimport Chart from \"./Charts/BarChart\";\nimport { Box } from \"@material-ui/core\";\n\nconst Backend = () => {\n  return (\n    <Box>\n      <Chart />\n    </Box>\n  );\n};\n\nexport default Backend;\n","import React, { useEffect } from \"react\";\n\nconst SASIcon = ({ data }) => {\nconst {icon, color} = data\nconsole.log('this is icon:', data, color)\n  const URL =\n    \"https://www.sas.se/v2/de-design-library/assets/js/partials/icons/build.js\";\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = URL;\n    script.async = true;\n    document.body.appendChild(script);\n    return () => document.body.removeChild(script);\n  }, []);\n\n  return (\n    <div>\n      <svg className={`sas-icon sas-icon-${icon}`} role=\"presentation\">\n        <use xlinkHref={`#${icon}`} href={`#${icon}`}></use>\n      </svg>\n      <svg className=\"sas-icon sas-icon-cl--user-round\" role=\"presentation\" style={{height:121,width:121, color: 'green'}}>\n       <use xlinkHref=\"#cl--user-round\" href=\"#cl--user-round\"></use>\n     </svg>\n    </div>\n  );\n};\n\nexport default SASIcon\n","import React from 'react'\nimport SASIcon from './SASIcon'\n\n\nconst Commerce = () => {\n    return (\n        <>\n        <p>Commerce</p>\n        <SASIcon data={{color: 'red', icon: 'cl--checkbox-active'}}/>\n        </>\n    )\n}\n\nexport default Commerce","import React, { useState, useEffect } from \"react\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core\";\nimport NewHeader from \"./NewHeader\";\nimport InfoIcon from \"./InfoIcon\";\nimport Home from \"./Home\";\nimport { connect } from \"react-redux\";\nimport Frontend from \"./Frontend\";\nimport Backend from \"./Backend\";\nimport Commerce from \"./Commerce\";\n\nconst themeObject = {\n  palette: {\n    primary: {\n      main: \"#001eb7\"\n    },\n    secondary: { main: \"#0087f5\" },\n    type: \"light\"\n  }\n};\n\nconst useDarkMode = () => {\n  const [theme, setTheme] = useState(themeObject);\n\n  const {\n    palette: { type }\n  } = theme;\n\n  const toggleDarkMode = () => {\n    const updatedTheme = {\n      ...theme,\n      palette: {\n        ...theme.palette,\n        type: type === \"light\" ? \"dark\" : \"light\"\n      }\n    };\n    setTheme(updatedTheme);\n  };\n  return [theme, toggleDarkMode];\n};\n\nconst useStyles = makeStyles({\n  drawer: {\n    justifyContent: \"flex-start\",\n    display: \"flex\",\n    bottom: \"0%\",\n    position: \"fixed\"\n  }\n});\n\nconst Main = props => {\n  const { DISPLAY } = props;\n  const [theme, toggleDarkMode] = useDarkMode();\n  const [whatToShow, setWhatToShow] = useState(<Home />);\n  const themeConfig = createMuiTheme(theme);\n  const classes = useStyles();\n  console.log(themeConfig.palette.background.paper);\n\n  useEffect(() => {\n    switch (DISPLAY) {\n      case \"Frontend\":\n        setWhatToShow(<Frontend />);\n        break;\n      case \"Backend\":\n        setWhatToShow(<Backend />);\n        break;\n      case \"Commerce\":\n        setWhatToShow(<Commerce />);\n        break;\n      default:\n        setWhatToShow(<Home />);\n    }\n  }, [DISPLAY]);\n\n  return (\n    <ThemeProvider theme={themeConfig}>\n      <div\n        style={{\n          backgroundColor: themeConfig.palette.background.paper,\n          minHeight: '100vh',\n          zIndex: 2\n        }}\n      >\n        <NewHeader parentMethod={toggleDarkMode} />\n        <div style={{ height: 30 }} />\n        <Container>\n          <div>{whatToShow}</div>\n        </Container>\n      </div>\n      <div className={classes.drawer}>\n        <InfoIcon />\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    ...state,\n    setDISPLAY: state.DISPLAY,\n    theme: state.THEME\n  };\n};\n\nexport default connect(mapStateToProps)(Main);\n","import React from \"react\";\nimport \"./Loading.css\";\n\nconst Loading = () => {\n  return (\n    <div className=\"loadingWrapper\">\n      <div className=\"typewriter\">\n        <h1>No Enterprise Dashboard</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React, { useState } from \"react\";\nimport Main from './Main'\n\nimport Loading from './Loading/Loading'\n\n\n\nfunction Proxy1() {\n  const [loading, setLoading] = useState(true)\n\n  setTimeout(() => {\n    setLoading(false)\n  }, 2000);\n\n  return  loading ? <Loading /> : <Main />\n\n}\n\nexport default Proxy1","import React from \"react\";\nimport \"./App.css\";\nimport {Router, Route} from 'react-router'\nimport Proxy1 from './Components/Proxy1'\nimport { createBrowserHistory } from 'history';\n\n\nconst history = createBrowserHistory({\n    basename: process.env.PUBLIC_URL\n});\n\n\nfunction App () {\n\n  return (\n    <Router history={history} basename={'/deploy-web'}>\n      <Route path='/' component={Proxy1} />\n    </Router>\n\n)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './actions'\n\nconst initialState = {\n    DISPLAY: 'Home',\n    THEME: 'DEFAULT'\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type){\n        case actionTypes.SET_DISPLAY:\n        return {\n            ...state,\n            DISPLAY: action.DISPLAY\n        }\n        default:\n            return state\n    }\n}\n\nexport default reducer","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport reducer from \"./Redux/reducer\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}